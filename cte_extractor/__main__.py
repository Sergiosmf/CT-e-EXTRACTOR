#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
M√≥dulo principal para execu√ß√£o do CT-e Extractor via python -m cte_extractor

Este arquivo permite executar o m√≥dulo diretamente com:
    python -m cte_extractor
"""

import sys
import os

def main():
    """Fun√ß√£o principal para demonstra√ß√£o do m√≥dulo."""
    print("üöö CT-e EXTRACTOR - Execu√ß√£o via m√≥dulo")
    print("="*50)
    
    try:
        # Importar componentes do pr√≥prio m√≥dulo
        from . import (
            __version__, __title__, __description__,
            get_version_info, show_example, help
        )
        
        print(f"‚úÖ {__title__} v{__version__}")
        print(f"üìã {__description__}")
        
        # Mostrar informa√ß√µes
        print("\n" + "="*50)
        help()
        
        # Testar importa√ß√µes b√°sicas
        print("\n" + "="*50)
        print("TESTANDO COMPONENTES:")
        print("="*50)
        
        from .facade import CTEFacade
        print("‚úÖ CTEFacade dispon√≠vel")
        
        from .factory import CTEExtractorFactory, ExtractorBuilder
        print("‚úÖ Factory e Builder dispon√≠veis")
        
        from .models import CTe, Pessoa, Endereco
        print("‚úÖ Modelos de dados dispon√≠veis")
        
        print("\nüéâ M√≥dulo funcionando corretamente!")
        
        print("\n" + "="*50)
        print("PR√ìXIMOS PASSOS:")
        print("="*50)
        print("1. Para usar o m√≥dulo, importe em seu c√≥digo Python:")
        print("   from cte_extractor import CTEFacade")
        print("   facade = CTEFacade()")
        print("\n2. Para ver exemplos detalhados:")
        print("   python main.py")
        print("\n3. Para desenvolvimento:")
        print("   Execute os testes em tests/")
        
    except ImportError as e:
        print(f"‚ùå Erro de importa√ß√£o: {e}")
        print("Verifique se todos os arquivos do m√≥dulo est√£o presentes")
        
    except Exception as e:
        print(f"‚ùå Erro: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
